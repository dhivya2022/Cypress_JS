{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-23T13:38:25.001Z",
    "end": "2022-03-23T13:38:36.376Z",
    "duration": 11375,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7979cb18-8df1-4bfa-8bfb-114724371cfc",
      "title": "",
      "fullFile": "cypress/integration/3-RS_AngularPractice/_13_Cypress_POM_Assert_SumOfProductPrice.js",
      "file": "cypress/integration/3-RS_AngularPractice/_13_Cypress_POM_Assert_SumOfProductPrice.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fd5c40e2-16c2-47c0-a4ba-fdd0a66828a7",
          "title": "Test Suite - Rahul Shetty Automation Practice - _13_Cypress_POM_Assert_SumOfProductPrice",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test case for POM_Assert_SumOfProductPrice",
              "fullTitle": "Test Suite - Rahul Shetty Automation Practice - _13_Cypress_POM_Assert_SumOfProductPrice Test case for POM_Assert_SumOfProductPrice",
              "timedOut": null,
              "duration": 9239,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/** HOME PAGE - START*/\ncy.visit('https://rahulshettyacademy.com/angularpractice/');\ncy.log('Application URL : ' + cy.url()); //Object creation of HomePage.js \nconst homePage = new _HomePage.default();\nhomePage.getTextBox_Name().type(this.testData_AngularPractice.name);\nhomePage.getDropdown_Gender().select(this.testData_AngularPractice.gender); //Assertion for Two-way Data Binding\nhomePage.getTextBox_TwoWayDataBiniding().should('have.value', this.testData_AngularPractice.name); // Assertion for Custom Attribute(minlength)\n// Expected value is 2\n//<input class=\"form-control ng-pristine ng-invalid ng-touched\" minlength=\"2\" name=\"name\" required=\"\" type=\"text\" xpath=\"1\">\nhomePage.getTextBox_Name().should('have.attr', 'minlength', 2);\nhomePage.getTextBox_Name().should('have.attr', 'class', 'form-control ng-dirty ng-valid ng-touched');\nhomePage.getTextBox_Name().should('have.attr', 'type', 'text'); //Assertion for Radio button(Entrepreneur) disabled\nhomePage.getRadioButton_Entrepreneur().should('be.disabled');\nhomePage.getLinkShop().click(); // this.testData_AngularPractice.productName = \"productName\":[\"iphone X\",\"Samsung Note 8\",\"Nokia Edge\",\"Blackberry\"]\nthis.testData_AngularPractice.productName.forEach(function (element) {\n  cy.selectProduct(element);\n});\n/** HOME PAGE - END*/\n/** PRODUCTS PAGE - START*/\nconst productsPage = new _ProductsPage.default();\nproductsPage.getLinkCheckout().click();\n/** PRODUCTS PAGE - END*/\n/** PRODUCTS SUMMARY PAGE - START*/\nconst productsSummaryPage = new _ProductsSummaryPage.default();\nvar sum = 0;\ncy.get('tr td:nth-child(4) strong').each((element, index, list) => {\n  const actualProductPrice = element.text();\n  cy.log('Product Price before formatting: ' + actualProductPrice); //String -> â‚¹. 100000\n  //Splitting on the basis of space -> so that we can get sum\n  var res = actualProductPrice.split(\" \");\n  cy.log('Product Price after formatting: ' + res[1].trim()); //Logic for doing sum of Products price\n  //sum = sum + res[1].trim();\n  sum = Number(sum) + Number(res[1].trim());\n}).then(function () {\n  //Handling the Promise manually as it is Javascript and Javascript is Asynchronous\n  cy.log('sum: ' + sum);\n});\nproductsSummaryPage.getText_TotalPrice().then(function (element) {\n  var actualFinalProductPrice = element.text();\n  var res = actualFinalProductPrice.split(\" \");\n  var actualFinalProductPrice_Formatted = res[1].trim(); //Assertion for price sum and final price - Using Chai\n  expect(Number(actualFinalProductPrice_Formatted)).to.equal(sum);\n});\nproductsSummaryPage.getButtonCheckout().click();\n/** PRODUCTS SUMMARY PAGE - END*/\n/** DELIVERY LOCATION PAGE - START*/\n// const deliveryLocationPage = new DeliveryLocationPage()\n// deliveryLocationPage.getTextbox_Location().type('India')\n// deliveryLocationPage.getDropdown_Location().click()\n// deliveryLocationPage.getCheckbox_Agree().click()\n// deliveryLocationPage.getButton_Purchase().click()\n// //deliveryLocationPage.getMessage_Success().should('should.have','Success!')\n// deliveryLocationPage.getMessage_Success().should('include.text','Success!')\n/** DELIVERY LOCATION PAGE - END*/",
              "err": {},
              "uuid": "b648d9f0-7a65-459c-8928-1f5b4b04c354",
              "parentUUID": "fd5c40e2-16c2-47c0-a4ba-fdd0a66828a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b648d9f0-7a65-459c-8928-1f5b4b04c354"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9239,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": null,
      "version": "6.1.1"
    }
  }
}